---
http_interactions:
- request:
    method: get
    uri: http://127.0.0.1:4001/api/v1/jobs?query=backend
    body:
      encoding: UTF-8
      string: ''
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Host:
      - 127.0.0.1:4001
      User-Agent:
      - http.rb/5.0.4
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '82825'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 12 Dec 2021 10:25:00 GMT
- request:
    method: get
    uri: http://127.0.0.1:4001/
    body:
      encoding: UTF-8
      string: ''
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Host:
      - 127.0.0.1:4001
      User-Agent:
      - http.rb/5.0.4
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Connection:
      - close
      Content-Length:
      - '75'
    body:
      encoding: ASCII-8BIT
      string: '{"status":"ok","message":"S-killer API v1 at /api/v1/ in development
        mode"}'
  recorded_at: Sun, 12 Dec 2021 10:25:01 GMT
recorded_with: VCR 6.0.0
